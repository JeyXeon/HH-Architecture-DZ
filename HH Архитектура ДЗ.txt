1. Можно попробовать воспользоваться средствами браузера и при помощи кеширования сохранять часто отправляемые запросы (как в примере запрос по странам).
Это должно позволить не выполнять каждый раз запрос, а после выполнения один раз запоминать его и при повторе выдавать запомненый результат. Данные по странам, городам и прочим статичным нееменяющимся со временем данным должны подходить для этого.
Также можно попробовать завести отдельный сервис, который будет ходить в базу специально для получения часто запрашиваемой информации и 
потом общаться с другими сервисами, но я не уверен даст ли это какой то выигрыш, так как общение сервисов может только замедлить процесс.
2. Как вариант можно секционировать записи по категориям(например разбить вакансии по городам, получится что-то вроде, moscow_vacancies,
spb_vacancies). Это разбиение на более маленькие таблицы, по идее должно ускорить выполнение запросов.
Самый очевидный вариант ввести проверку актуальности вакансий и при переполнении таблицы либо архивировать неактуальные или заброшенные вакансии,
либо просто их чистить. Это изменение в целом поможет оптимизировать затраты памяти на хранение данных.
3. Краем глаза в статье на хабре встречался с технологиями для логирования приложений с общением между сервисами Graylog или ELK Stack.
Также сам на производстве сталкивался с инструментом упрощающим развертывание под название JRebel. 
В целом вещь не необходимая и заменимая, но в свое время показалась очень удобной.